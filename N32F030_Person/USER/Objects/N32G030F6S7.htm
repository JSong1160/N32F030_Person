<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\N32G030F6S7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\N32G030F6S7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Sep 23 14:56:49 2022
<BR><P>
<H3>Maximum Stack Usage =        280 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MODS_Poll &rArr; MODS_AnalyzeApp &rArr; MODS_03H &rArr; MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC_IRQHandler</a><BR>
 <LI><a href="#[41]">ReadInf</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">ReadInf</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[25]">COMP_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[11]">DMA_Channel1_2_3_4_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[10]">DMA_Channel1_2_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[15]">DMA_Channel3_4_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[12]">DMA_Channel5_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[c]">EXTI0_1_IRQHandler</a> from n32g030_it.o(i.EXTI0_1_IRQHandler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[d]">EXTI2_3_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[e]">EXTI4_15_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[a]">FLASH_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[20]">HDIV_SQRT_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32g030_it.o(i.HardFault_Handler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1a]">LPTIM_TIM6_IRQHandler</a> from n32g030_it.o(i.LPTIM_TIM6_IRQHandler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[23]">LPUART_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[9]">MMU_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32g030_it.o(i.NMI_Handler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from n32g030_it.o(i.PendSV_Handler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[21]">RAMC_PERR_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[b]">RCC_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[f]">RESERVE9_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from n32g030_it.o(i.SVC_Handler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from n32g030_it.o(i.SysTick_Handler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_n32g030.o(i.SystemInit) referenced from startup_n32g030.o(.text)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from n32g030_it.o(i.TIM3_IRQHandler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[18]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[19]">TIM8_CC_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[22]">USART1_2_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[24]">USART1_IRQHandler</a> from n32g030_it.o(i.USART1_IRQHandler) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[17]">USART2_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_n32g030.o(.text) referenced from startup_n32g030.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g030.o(.text)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[61]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[62]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[63]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[64]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[65]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA_Channel1_2_3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>HDIV_SQRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPUART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RAMC_PERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RESERVE9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>HSI_Trim_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bsp_hsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HSI_Trim_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVolt
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_ReciveNew
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[6a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2e]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>BEBufToUint16</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, modbus_slave.o(i.BEBufToUint16))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_06H
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_03H
</UL>

<P><STRONG><a name="[51]"></a>CRC16_Modbus</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, modbus_slave.o(i.CRC16_Modbus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC16_Modbus
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_Poll
</UL>

<P><STRONG><a name="[c]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, n32g030_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EXTI0_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>FLASH_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInf
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOnePage
</UL>

<P><STRONG><a name="[36]"></a>FLASH_EraseOnePage</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, flash.o(i.FLASH_EraseOnePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_EraseOnePage &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOpt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInf
</UL>

<P><STRONG><a name="[3a]"></a>FLASH_GetSTS</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, flash.o(i.FLASH_GetSTS))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOpt
</UL>

<P><STRONG><a name="[58]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
</UL>

<P><STRONG><a name="[39]"></a>FLASH_ProgramWord</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOpt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInf
</UL>

<P><STRONG><a name="[59]"></a>FLASH_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInf
</UL>

<P><STRONG><a name="[38]"></a>FLASH_WaitForLastOpt</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, flash.o(i.FLASH_WaitForLastOpt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetSTS
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOnePage
</UL>

<P><STRONG><a name="[43]"></a>FlashCheck</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, proc.o(i.FlashCheck))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[3f]"></a>GPIOInit</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, init.o(i.GPIOInit))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[44]"></a>GetLockCode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, proc.o(i.GetLockCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetLockCode
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[3b]"></a>GetVolt</STRONG> (Thumb, 466 bytes, Stack size 16 bytes, proc.o(i.GetVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetVolt &rArr; WriteInf &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g030_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>InitALL</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, init.o(i.InitALL))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = InitALL &rArr; USART1_Config &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInf
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVolt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockCode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCheck
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>LPTIM_TIM6_IRQHandler</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, n32g030_it.o(i.LPTIM_TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIM_TIM6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openexit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1r
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>MODS_Poll</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_Poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MODS_Poll &rArr; MODS_AnalyzeApp &rArr; MODS_03H &rArr; MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_Modbus
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_AnalyzeApp
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>MODS_ReciveNew</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_ReciveNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MODS_ReciveNew &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Conf
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g030_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g030_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>RS485_SendBuf</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, proc.o(i.RS485_SendBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS485_SendBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
</UL>

<P><STRONG><a name="[41]"></a>ReadInf</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, proc.o(i.ReadInf))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + In Cycle
<LI>Call Chain = ReadInf &rArr;  ReadInf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInf
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[57]"></a>ResetInf</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, proc.o(i.ResetInf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ResetInf &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOnePage
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInf
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g030_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g030_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, system_n32g030.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; HSI_Trim_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>TIM3_Conf</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, init.o(i.TIM3_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM3_Conf &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_ReciveNew
</UL>

<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, n32g030_it.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART1_Config</STRONG> (Thumb, 508 bytes, Stack size 40 bytes, init.o(i.USART1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART1_Config &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[24]"></a>USART1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, n32g030_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART1_IRQHandler &rArr; MODS_ReciveNew &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_ReciveNew
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g030.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USART1r</STRONG> (Thumb, 414 bytes, Stack size 0 bytes, n32g030_it.o(i.USART1r))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_TIM6_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>WriteInf</STRONG> (Thumb, 484 bytes, Stack size 8 bytes, proc.o(i.WriteInf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WriteInf &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOnePage
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVolt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_WriteRegValue
</UL>

<P><STRONG><a name="[52]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, modbus_slave.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_ReadRegValue
</UL>

<P><STRONG><a name="[6c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[35]"></a>closeexit</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, n32g030_it.o(i.closeexit))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>delay_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, delay.o(i.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[42]"></a>delay_ms</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckErr
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = main &rArr; MODS_Poll &rArr; MODS_AnalyzeApp &rArr; MODS_03H &rArr; MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_Poll
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitALL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[45]"></a>openexit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g030_it.o(i.openexit))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_TIM6_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5a]"></a>SetSysClock</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, system_n32g030.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetSysClock &rArr; HSI_Trim_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSI_Trim_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[47]"></a>MODS_03H</STRONG> (Thumb, 288 bytes, Stack size 80 bytes, modbus_slave.o(i.MODS_03H))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = MODS_03H &rArr; MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEBufToUint16
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckErr
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_ReadRegValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_AnalyzeApp
</UL>

<P><STRONG><a name="[4c]"></a>MODS_06H</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_06H))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MODS_06H &rArr; MODS_SendAckOk &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEBufToUint16
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_WriteRegValue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckOk
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckErr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_AnalyzeApp
</UL>

<P><STRONG><a name="[4f]"></a>MODS_AnalyzeApp</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, modbus_slave.o(i.MODS_AnalyzeApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = MODS_AnalyzeApp &rArr; MODS_03H &rArr; MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckErr
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_06H
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_03H
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_Poll
</UL>

<P><STRONG><a name="[49]"></a>MODS_ReadRegValue</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, modbus_slave.o(i.MODS_ReadRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MODS_ReadRegValue &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_03H
</UL>

<P><STRONG><a name="[4b]"></a>MODS_SendAckErr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_SendAckErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MODS_SendAckErr &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_AnalyzeApp
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_06H
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_03H
</UL>

<P><STRONG><a name="[4e]"></a>MODS_SendAckOk</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_SendAckOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MODS_SendAckOk &rArr; MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendWithCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_06H
</UL>

<P><STRONG><a name="[4a]"></a>MODS_SendWithCRC</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, modbus_slave.o(i.MODS_SendWithCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MODS_SendWithCRC &rArr; CRC16_Modbus
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_SendBuf
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_Modbus
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckOk
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_SendAckErr
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_03H
</UL>

<P><STRONG><a name="[4d]"></a>MODS_WriteRegValue</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, modbus_slave.o(i.MODS_WriteRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MODS_WriteRegValue &rArr; WriteInf &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOpt
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteInf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODS_06H
</UL>

<P><STRONG><a name="[5d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, init.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Conf
</UL>

<P><STRONG><a name="[5c]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, init.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Conf
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
